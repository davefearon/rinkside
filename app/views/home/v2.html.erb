<script>
var geocoder;
var initialLocation;
var browserSupportFlag =  new Boolean();
var map;
var marker;
var markers = Array();
var markerCount = 0;
var infowindow;
var currentMarker;

function initialize() {
  var myOptions = {
    zoom: 14,
    mapTypeId: google.maps.MapTypeId.ROADMAP,
    mapTypeControlOptions: {
      style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
    },
    navigationControlOptions: {
      style: google.maps.NavigationControlStyle.SMALL
    }
  };
  map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

  infowindow = new google.maps.InfoWindow();

  map.setCenter(new google.maps.LatLng(45.409056,-75.681725));

  // Try W3C Geolocation method (Preferred)
  if(navigator.geolocation) {
    browserSupportFlag = true;
    navigator.geolocation.getCurrentPosition(function(position) {
      initialLocation = new google.maps.LatLng(position.coords.latitude,position.coords.longitude);
      map.setCenter(initialLocation);
      contentString = "Your current location.";
      makeStartMarker(initialLocation,contentString);
      //fetch_locations();
    }, function() {
      //handleNoGeolocation(browserSupportFlag);
    });
  } else if (google.gears) {
    // Try Google Gears Geolocation
    browserSupportFlag = true;
    var geo = google.gears.factory.create('beta.geolocation');
    geo.getCurrentPosition(function(position) {
      initialLocation = new google.maps.LatLng(position.latitude,position.longitude);
      map.setCenter(initialLocation);
      contentString = "Your current location.";
      makeStartMarker(initialLocation,contentString);
      //fetch_locations();
    }, function() {
      //handleNoGeolocation(browserSupportFlag);
    });
  } else {
    // Browser doesn't support Geolocation
    browserSupportFlag = false;
    //handleNoGeolocation(browserSupportFlag);
  }
  fetch_locations();
}

function makeStartMarker( position, info ) {
  infowindow.setContent(info);
  infowindow.setPosition(position);
  //infowindow.open(map);

  var image = new google.maps.MarkerImage("../images/location.gif",
      new google.maps.Size(50.0, 67.0),
      new google.maps.Point(0, 0),
      new google.maps.Point(33.0, 33.0)
  );

  marker = new google.maps.Marker({
    map: map,
    // animation: google.maps.Animation.BOUNCE,
    position: position,
    clickable: true,
    icon: image
  });

  makeInfoWindow(marker, info);
}

function makeMarker( position, info, open, animation ) {
    infowindow.setContent(info);
    infowindow.setPosition(position);

    // **hockey guy**
    // var image = new google.maps.MarkerImage("../images/marker.png",
    //     new google.maps.Size(50.0, 67.0),
    //     new google.maps.Point(0, 0),
    //     new google.maps.Point(25.0, 33.0)
    // );
    // var shadow = new google.maps.MarkerImage("../images/shadow.png",
    //     new google.maps.Size(84.0, 67.0),
    //     new google.maps.Point(0, 0),
    //     new google.maps.Point(25.0, 33.0)
    // );

    // **sticks icon**
    var image = new google.maps.MarkerImage("../images/marker2.png",
        new google.maps.Size(40.0, 37.0),
        new google.maps.Point(0, 0),
        new google.maps.Point(20.0, 18.0)
    );


    if( animation != null ) {
      marker = new google.maps.Marker({
        map: map,
        animation: animation,
        position: position,
        clickable: true,
        icon: image
      });
    } else {
      marker = new google.maps.Marker({
        map: map,
        clickable: true,
        position: position,
        icon: image
      });
    }
    makeInfoWindow(marker, info);
}

function makeInfoWindow( marker, info ) {
  google.maps.event.addListener( marker, "click", function(event) {
    infowindow.setContent(info);
    infowindow.open(map, marker);
    currentMarker = marker;
  });

  markers[markerCount] = new Array( marker, info );
  markerCount++;
}

var filterByRinkType = "";
var filterByCondition = "";
$(document).ready(function(){
  $('#rinkType').change(function(){
    filterByRinkType = $('#rinkType').val();
    filterMarkers(filterByRinkType,filterByCondition);
  });
  $('#rinkCondition').change(function(){
    filterByCondition = $('#rinkCondition').val();
    filterMarkers(filterByRinkType,filterByCondition);
  });
});

function filterMarkers(rinkType,condition) {
  infowindow.close();
  for(i=0;i<markerCount;i++) {
    if( markers[i][1] != null ) {
      var string = markers[i][1];
      string = string.toLowerCase();
      var thecondition;
      if( condition == "excellent" ) { thecondition = "(excellent)"; }
      else if( condition == "good" ) { thecondition = "(excellent)|(good)"; }
      else if ( condition == "fair" ) { thecondition = "(excellent)|(good)|(fair)"; }
      else if ( condition == "poor" ) { thecondition = "(excellent)|(good)|(fair)|(poor)"; }
      else if ( condition == "closed" ) { thecondition = "(closed)"; }
      else { thecondition = "(excellent)|(good)|(fair)|(poor)|(closed)"; }

      if( string.match("" + thecondition + "") == null || string.match("(" + rinkType + ")") == null ) {
        m = markers[i][0];
        m.setVisible(false);
      } else {
        m = markers[i][0];
        m.setVisible(true);
      }

      if( condition == "" && rinkType == "" ) {
        m = markers[i][0];
        m.setVisible(true);
      }
    }
  }
}

function fetch_locations() {
  var data = { map: 'fetch' };
  var url = "/home/map.json";

  $.ajax({
    type: "POST",
    url: url,
    data: data,
    async: false,
    dataType: 'json',
    success: function(result)
    {
      addresses = result;
      $.each( addresses, function(i, value) {
        var info = "";
        if( value.condition != null ) {
          info = makeInfo( value.rink.rink.name, value.rink.rink.address, value.rink.rink.rinktype, value.condition.rinkcondition.condition );
        } else {
          info = makeInfo( value.rink.rink.name, value.rink.rink.address, value.rink.rink.rinktype, "Unknown" );
        }

        if( value.rink.rink.latitude == "" || value.rink.rink.latitude == null || value.rink.rink.longitude == "" || value.rink.rink.longitude == null ) {
          var pos = codeAddress( value.rink.rink.id, value.rink.rink.address + ", Ottawa, Ontario, Canada" );
          makeMarker(pos,info,false,google.maps.Animation.DROP);
        } else {
          var position = new google.maps.LatLng(value.rink.rink.latitude,value.rink.rink.longitude);
          makeMarker(position,info,false,google.maps.Animation.DROP);
        }
      });
    }
  });
}

function makeInfo( name, address, rinktype, condition ) {
  return "<div class='infowindow'><h3>" + name + "</h3><h4>" + address + "</h4><p>Condition: " + condition + "<br/>Rink Type: " + rinktype + "</p><p class='getdirections' onclick='getDirections(); return true;'>Get Directions</p></div>";
}

var googleDirectionOptions = { draggable: true };
var directionDisplay;
var directionsService;

function getDirections() {
  infowindow.close();
  try {
    directionDisplay.setMap(null);
  } catch(e) {}

  return directions();
}

function directions() {
  directionDisplay = new google.maps.DirectionsRenderer(googleDirectionOptions);
  directionDisplay.setMap(null);
  console.debug( directionDisplay.getMap() );
  directionsService = new google.maps.DirectionsService();
  document.getElementById('directions').innerHTML = "";

  var request = {
    origin: initialLocation,
    destination: currentMarker.position.toString(),
    travelMode: google.maps.DirectionsTravelMode.DRIVING
  };

  directionsService.route(request, function(response, status) {
    if(status == google.maps.DirectionsStatus.OK) {
      directionDisplay.setMap(null);
      directionDisplay.setMap(map);
      directionDisplay.setPanel(document.getElementById('directions'));
      directionDisplay.setDirections(response);
    }
  });

  return true;
}

/*
function handleNoGeolocation(errorFlag) {
  initialLocation = new google.maps.LatLng(45.409056,-75.681725);
  if(errorFlag == true) {
    contentString = "Error: The Geolocation service failed.";
  } else {
    contentString = "Error: Your browser doesn't support geolocation. Are you in Siberia?";
  }
  map.setCenter(initialLocation);
  makeStartMarker(initialLocation,contentString);
  //fetch_locations();
}
*/

function codeAddress( id, address ) {
  geocoder = new google.maps.Geocoder();
  geocoder.geocode({'address':address}, function(results, status) {
    if( status == google.maps.GeocoderStatus.OK ) {
      var data = {
        id: id,
        latitude: results[0].geometry.location.lat(),
        longitude: results[0].geometry.location.lng()
      };
      $.ajax({
        type: "PUT",
        url: "/rinks/" + id,
        data: data,
        async: false,
        dataType: 'json',
        success: function(r) {
            //console.debug(r);
        }
      });
      return results[0].geometry.location;
    }
    else
    {
        //error getting geocode info
        //console.debug(status)
    }
  });
}
</script>

<div id="container">
  <div id="left-wrapper">
    <div id="logo"></div>
    
    <header id="header">
      <h3>filters</h3>
      <label for="rinkType">Rink Type</label>
      <select name="rinkType" id="rinkType">
        <option value="">Select Rink Type</option>
        <option value="highboard">Highboard</option>
        <option value="no\sboards">No Boards</option>
        <option value="puddle">Puddle</option>
        <option value="oval">Oval</option>
      </select>
      <br/><br/>
      <label for="rinkCondition">Condition</label>
      <select name="rinkCondition" id="rinkCondition">
        <option value="">Select Minimum Condition</option>
        <option value="excellent">Excellent</option>
        <option value="good">Good</option>
        <option value="fair">Fair</option>
        <option value="poor">Poor</option>
        <option value="closed">Closed</option>
      </select>



    </header>
    
    <footer id="footer">
      <p style="margin-bottom:20px;"><a href="http://www.apps4ottawa.ca/en/apps/116" target="_blank"><img src="../images/vote.png" width="60" height="60"/></a></p>
      <small>rinksi.de is an open data project by ottawans<br/> <a href="http://davefearon.com" target="_blank">Dave Fearon</a> &amp; <a href="http://warrendunlop.com" target="_blank">Warren Dunlop</a></small>
    </footer>
  </div> <!-- end left -->
  
  <div id="right-wrapper">
    <div id="main">
        <div id="map_canvas"></div>
        <div id="directions"></div>
    </div>
  </div>
</div> <!-- end of #container -->